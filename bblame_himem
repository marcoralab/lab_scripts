#!/usr/bin/env Rscript

suppressPackageStartupMessages(library(dplyr))
library(readr)
library(stringr)

options(width = 200)

ncores <- function(x) {
  y <- str_extract_all(x, "\\d+(?=[*])") %>% sapply(function (x) sum(as.integer(x)))
  ifelse(y == 0, 1, y)
}

mem_bytes <- function(mem) {
  # Define the conversion factors for each unit
  unit_names <- c("K" = 1024, "M" = 1024^2, "G" = 1024^3, "T" = 1024^4, "B" = 1)

  # Extract the numeric part and the unit from the memory strings
  matches <- str_match(mem, "^(\\d+\\.{0,1}\\d*)\\s*([KMGT]{0,1})(B|bytes){0,1}$")

  # Retrieve the numeric values and units
  values <- as.numeric(matches[, 2])
  units <- ifelse(matches[, 3] == "", "B", matches[, 3])

  # Convert the memory to bytes
  bytes <- unname(values * unit_names[units])

  return(bytes)
}

mem_human <- function(mem) {
  # Define the conversion factors for each unit
  units <- c("B", "K", "M", "G", "T")

  # Convert the bytes to the largest appropriate unit
  bytes_vector <- as.numeric(mem)
  exp <- floor(log(bytes_vector, base = 1024))
  values <- bytes_vector / (1024^exp)
  units <- units[exp + 1]

  # Format the values and units
  formatted_memory <- sprintf("%.1f %s", values, units)

  return(formatted_memory)
}

jobs <- "bjobs -u all -o \"jobid job_name user proj_name queue stat cpu_used nthreads exec_host time_left combined_resreq memlimit max_mem delimiter='^'\" " %>%
  pipe %>%
  read_delim(col_types = cols(
    .default = col_character(),
    JOBID = col_double(),
    NTHREADS = col_double(),
    ), delim = "^", na = "-") %>%
  mutate(ncore = ncores(EXEC_HOST),
         memlimit_tot = ncore * mem_bytes(MEMLIMIT),
         max_mem_b = mem_bytes(MAX_MEM))

message("Users")
ujobs <- jobs %>%
  filter(STAT == "RUN", str_detect(COMBINED_RESREQ, "himem"),
         !is.na(max_mem_b)) %>%
  group_by(USER) %>%
  summarise(ncores = sum(ncore), njobs = n(), avgcores = mean(ncore),
            avgmemlim = mem_human(mean(memlimit_tot)), minmemlim = mem_human(min(memlimit_tot)),
            avgmemmax = mem_human(mean(max_mem_b)), minmemmax = mem_human(min(max_mem_b)), memmax = mem_human(max(max_mem_b)),
            .groups = "drop")

paste(c("finger -s", ujobs$USER, "| sed -r 's/[[:blank:]]+/\\t/;s/\\s\\s+.+//'"), collapse = " ") %>%
  pipe %>%
  read_tsv(col_types = "cc") %>%
  distinct %>%
  right_join(ujobs, by = c("Login" = "USER")) %>%
  arrange(-ncores) %>%
  print(n = Inf)

message("\nProjects")
jobs %>%
  filter(STAT == "RUN", str_detect(COMBINED_RESREQ, "himem")) %>%
  group_by(PROJ_NAME) %>%
  summarise(ncores = sum(ncore), njobs = n(), avgcores = mean(ncore), users = n_distinct(USER), .groups = "drop") %>%
  arrange(-ncores) %>%
  print(n = Inf)
